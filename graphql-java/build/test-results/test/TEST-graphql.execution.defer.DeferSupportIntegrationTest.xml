<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="graphql.execution.defer.DeferSupportIntegrationTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2019-10-01T16:24:09" hostname="pc1295" time="0.864">
  <properties/>
  <testcase name="test defer support end to end" classname="graphql.execution.defer.DeferSupportIntegrationTest" time="0.45"/>
  <testcase name="test defer support keeps the fields named correctly when interspersed in the query" classname="graphql.execution.defer.DeferSupportIntegrationTest" time="0.407"/>
  <testcase name="nonNull types are not allowed" classname="graphql.execution.defer.DeferSupportIntegrationTest" time="0.003"/>
  <testcase name="mutations cant have defers" classname="graphql.execution.defer.DeferSupportIntegrationTest" time="0.004"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[[ForkJoinPool.commonPool-worker-5] WARN notprivacysafe.graphql.execution.SimpleDataFetcherExceptionHandler - Exception while fetching data (/post/c[0]/goes/bang) : Bang!
java.lang.RuntimeException: Bang!
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at graphql.execution.defer.DeferSupportIntegrationTest$4.get(DeferSupportIntegrationTest.groovy:118)
	at graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:272)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:200)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:201)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:535)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:487)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:425)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1705)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1692)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
[ForkJoinPool.commonPool-worker-5] WARN notprivacysafe.graphql.execution.SimpleDataFetcherExceptionHandler - Exception while fetching data (/post/c[1]/goes/bang) : Bang!
java.lang.RuntimeException: Bang!
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at graphql.execution.defer.DeferSupportIntegrationTest$4.get(DeferSupportIntegrationTest.groovy:118)
	at graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:272)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:200)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:201)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:535)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:487)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:425)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1705)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1692)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
[ForkJoinPool.commonPool-worker-5] WARN notprivacysafe.graphql.execution.SimpleDataFetcherExceptionHandler - Exception while fetching data (/post/c[2]/goes/bang) : Bang!
java.lang.RuntimeException: Bang!
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at graphql.execution.defer.DeferSupportIntegrationTest$4.get(DeferSupportIntegrationTest.groovy:118)
	at graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:272)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:200)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:201)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:535)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:487)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:425)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1705)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1692)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
[ForkJoinPool.commonPool-worker-3] WARN notprivacysafe.graphql.execution.SimpleDataFetcherExceptionHandler - Exception while fetching data (/post/c[0]/goes/bang) : Bang!
java.lang.RuntimeException: Bang!
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at graphql.execution.defer.DeferSupportIntegrationTest$4.get(DeferSupportIntegrationTest.groovy:118)
	at graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:272)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:200)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:201)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:535)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:487)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:425)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1705)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1692)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
[ForkJoinPool.commonPool-worker-3] WARN notprivacysafe.graphql.execution.SimpleDataFetcherExceptionHandler - Exception while fetching data (/post/c[1]/goes/bang) : Bang!
java.lang.RuntimeException: Bang!
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at graphql.execution.defer.DeferSupportIntegrationTest$4.get(DeferSupportIntegrationTest.groovy:118)
	at graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:272)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:200)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:201)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:535)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:487)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:425)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1705)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1692)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
[ForkJoinPool.commonPool-worker-3] WARN notprivacysafe.graphql.execution.SimpleDataFetcherExceptionHandler - Exception while fetching data (/post/c[2]/goes/bang) : Bang!
java.lang.RuntimeException: Bang!
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at graphql.execution.defer.DeferSupportIntegrationTest$4.get(DeferSupportIntegrationTest.groovy:118)
	at graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:272)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:200)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:201)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74)
	at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:656)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:440)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:535)
	at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:487)
	at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:425)
	at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:390)
	at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:202)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1705)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1692)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
[Test worker] WARN notprivacysafe.graphql.GraphQL - Query failed to validate : '
            {
                mandatoryReviews @defer # nulls are not allowed
                {
                    reviewText
                }
            }
        '
[Test worker] WARN notprivacysafe.graphql.GraphQL - Query failed to validate : '
            mutation {
                mutate(arg : "go") @defer
            }
        '
]]></system-err>
</testsuite>
